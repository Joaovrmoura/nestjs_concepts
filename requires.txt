 npm i @nestjs/mapped-types

npm i class-validator
npm i class-transformer

// no main.ts
 app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // Remove automaticamente propriedades que NÃO existem no DTO
      forbidNonWhitelisted: true, // Se o corpo da requisição contiver propriedades extras, lança um erro
    }),
  );


ParseIntPipe, ParseFloatPipe , ParseArrayPipe, ParseEnumPipe etc...
// delete a message
@Delete(':id')
    remove(@Param('id', ParseIntPipe) id: number) {
    console.log(id, typeof id);
    return this.messageService.remove(id);
}


// temos que ter cuidado e saber se o pipe dever ser
usado globalmente ou no decorator
exe: Todas as rotas usam o ParseIntPipe(todos os params devem ser int)
@Controller('users')
@UsePipes(ParseIntPipe)